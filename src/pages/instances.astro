---
import { getCollection } from 'astro:content';
const instanceFamilyEntries = await getCollection('instance-families');
import { getInstanceComputeClass, instanceSizeSort } from '../lib/instances';

import SiteLayout from '../layouts/SiteLayout.astro';
---

<SiteLayout title="Instances">
  <div class="grid sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3">
    {
      instanceFamilyEntries.map((k) => (
        <div class="max-w-sm rounded overflow-hidden shadow-lg">
          <div class="px-6 py-4">
            <div class="font-bold text-xl mb-2">
              <a href={'/instance-family/' + k.id}>
                {k.id.toUpperCase()}
                <br />
                {getInstanceComputeClass(k.id)}
              </a>
            </div>
          </div>
          <div>
            <div class="px-6 pt-4 pb-2">
              {!k.data.currentGeneration && (
                <span class="inline-block bg-gray-300 dark:bg-gray-700 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 dark:text-gray-300 mr-2 mb-2">
                  Legacy
                </span>
              )}
              <span class="inline-block bg-gray-300 dark:bg-gray-700 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 dark:text-gray-300 mr-2 mb-2">
                regions - {k.data.regions.length}
              </span>
              <span class="inline-block bg-gray-300 dark:bg-gray-700 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 dark:text-gray-300 mr-2 mb-2">
                {instanceSizeSort(k.data.sizes)[0]} -{' '}
                {
                  instanceSizeSort(k.data.sizes, true)[
                    instanceSizeSort(k.data.sizes, true).length - 1
                  ]
                }
              </span>
            </div>
          </div>
        </div>
      ))
    }
  </div>
</SiteLayout>
